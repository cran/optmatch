
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require('optmatch')
Loading required package: optmatch
Loading required package: digest
You're loading optmatch, by B. Hansen and M. Fredrickson.
 The optmatch package makes essential use of D. P. Bertsekas
 and P. Tseng's RELAX-IV algorithm and code, as well as
 Bertsekas' AUCTION algorithm and code.  Using the software
 to 'satisfy in any part commercial delivery requirements to
 government or industry' requires a special agreement with
 Dr. Bertsekas. For more information, enter
 relaxinfo() at the command line.

> 
> data(plantdist)
> # warnings about lacking data argument are expected
> pairmatch(plantdist)
   A    B    C    D    E    F    G    H    I    J    K    L    M    N    O    P 
 1.1  1.2  1.3  1.4  1.5  1.6  1.7 <NA>  1.1  1.2 <NA>  1.3 <NA> <NA> <NA> <NA> 
   Q    R    S    T    U    V    W    X    Y    Z 
 1.4  1.5 <NA> <NA>  1.6 <NA> <NA>  1.7 <NA> <NA> 
Warning message:
In fullmatch(x = x, min.controls = controls, max.controls = controls,  :
  Without 'data' argument the order of the match is not guaranteed
    to be the same as your original data.
> pairmatch(plantdist, controls=2)
   A    B    C    D    E    F    G    H    I    J    K    L    M    N    O    P 
 1.1  1.2  1.3  1.4  1.5  1.6  1.7 <NA>  1.1  1.2 <NA>  1.2  1.4  1.3 <NA> <NA> 
   Q    R    S    T    U    V    W    X    Y    Z 
 1.4  1.5  1.5  1.3  1.6 <NA>  1.1  1.7  1.7  1.6 
Warning message:
In fullmatch(x = x, min.controls = controls, max.controls = controls,  :
  Without 'data' argument the order of the match is not guaranteed
    to be the same as your original data.
> ## Not run: pairmatch(plantdist + caliper(plantdist, 1)) # Matching fails everywhere
> pairmatch(plantdist + caliper(plantdist, 5, compare = `<`), remove.unmatchables=TRUE) # Matching works after removing plant 'F'
   A    B    C    D    E    F    G    H    I    J    K    L    M    N    O    P 
 1.1  1.2  1.3  1.4  1.5 <NA>  1.6 <NA>  1.1  1.2 <NA>  1.3 <NA> <NA> <NA> <NA> 
   Q    R    S    T    U    V    W    X    Y    Z 
 1.4  1.5 <NA> <NA> <NA> <NA> <NA>  1.6 <NA> <NA> 
Warning message:
In fullmatch(x = x, min.controls = controls, max.controls = controls,  :
  Without 'data' argument the order of the match is not guaranteed
    to be the same as your original data.
> 
> data(nuclearplants)
> # in both of match_on calls below use sd to maintain backwards compatibility with
> # pscore.dist, which used sd by default. match_on has used mad as the std. scale
> # since it was added to the package, so the use of match_on should be consistent
> # for users going forward.
> psm <- glm(pr~.-(pr+cost), family=binomial(), data=nuclearplants)
> psd <- match_on(psm, standardization.scale = sd)
> pm <- pairmatch(psd, controls=2, data = nuclearplants)
> 
> # the pm match immediately above was giving slightly different answers in some environment
> # the problem allowed multiple optimal solutions, and different choices were picked in different environments
> # the sum of matched distances should be the same across all environments
> 
> summary(pm)$total.distance
[1] 25.83338
> 
> # Also not run: again an error would be thrown (which R CMD CHECK does not like)
> # pairmatch(caliper(match_on(psm, standardization.scale = sd,
> #   within = exactMatch(pr ~ pt, data =
> #   nuclearplants)), width=2)) # Fails in subclass '1'
> 
> 
> proc.time()
   user  system elapsed 
  0.856   0.032   0.879 
