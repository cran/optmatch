
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require('optmatch')
Loading required package: optmatch
Loading required package: digest
You're loading optmatch, by B. Hansen and M. Fredrickson.
 The optmatch package makes essential use of D. P. Bertsekas
 and P. Tseng's RELAX-IV algorithm and code, as well as
 Bertsekas' AUCTION algorithm and code.  Using the software
 to 'satisfy in any part commercial delivery requirements to
 government or industry' requires a special agreement with
 Dr. Bertsekas. For more information, enter
 relaxinfo() at the command line.

> data(plantdist)
> summary(fullmatch(1 * (plantdist < 10))) # a zero-1 matrix
Structure of matched sets:
 1:1  1:2 1:5+ 
   5    1    1 
Effective Sample Size:  8.18 
(equivalent number of matched pairs).

sum(matched.distances)=0
(within 0.00542 of optimum).
Percentiles of matched distances:
  0%  50%  95% 100% 
   0    0    0    0 
Warning message:
In fullmatch(1 * (plantdist < 10)) :
  Without 'data' argument the order of the match is not guaranteed
    to be the same as your original data.
> ## Not run as it would cause an error: summary(pairmatch(plantdist + caliper(plantdist, 1))) # Matching fails everywhere
> data(nuclearplants)
> psm <- glm(pr~.-(pr+cost), family=binomial(), data=nuclearplants)
> psd <- match_on(psm, standardization.scale = sd) # backwards compatible to 0.7-2
> psfm <- fullmatch(psd + caliper(psd, 0.25), data = nuclearplants)
> summary(psfm)
Structure of matched sets:
 1:0  3:1  2:1  1:2 1:5+  0:1 
   3    1    1    1    1   11 
Effective Sample Size:  5.92 
(equivalent number of matched pairs).

sum(matched.distances)=1.02
(within 0.018 of optimum).
Percentiles of matched distances:
    0%    50%    95%   100% 
0.0110 0.0577 0.1600 0.1660 
> ## not run as it causes an error in a subclass
> # pspm <- pairmatch(caliper(match_on(psm, standarization.scale = sd, within =
> #                   exactMatch(pr ~ pt, data = nuclearplants)), width=2)) # Fails in subclass '1'
> # summary(pspm)
> psd[1,] <- psd[1,] + rep(100,22)
> 
> # due to slight differences in the match on different platforms, just check that the
> # total.distances remain the same
> summary(pairmatch(psd, controls=2, data = nuclearplants))$total.distance
[1] 225.8334
> 
> summary(psfm, propensity.model=psm)
Structure of matched sets:
 1:0  3:1  2:1  1:2 1:5+  0:1 
   3    1    1    1    1   11 
Effective Sample Size:  5.92 
(equivalent number of matched pairs).

sum(matched.distances)=1.02
(within 0.018 of optimum).
Percentiles of matched distances:
    0%    50%    95%   100% 
0.0110 0.0577 0.1600 0.1660 

For covariate balance information, load the RItools package and
pass a (glm) propensity model to summary() as a second argument.
> require('RItools')
Loading required package: RItools
> summary(psfm, propensity.model='foo')
Structure of matched sets:
 1:0  3:1  2:1  1:2 1:5+  0:1 
   3    1    1    1    1   11 
Effective Sample Size:  5.92 
(equivalent number of matched pairs).

sum(matched.distances)=1.02
(within 0.018 of optimum).
Percentiles of matched distances:
    0%    50%    95%   100% 
0.0110 0.0577 0.1600 0.1660 

For covariate balance information, load the RItools package and
pass a (glm) propensity model to summary() as a second argument.
> summary(psfm, propensity.model=psm)
Structure of matched sets:
 1:0  3:1  2:1  1:2 1:5+  0:1 
   3    1    1    1    1   11 
Effective Sample Size:  5.92 
(equivalent number of matched pairs).

sum(matched.distances)=1.02
(within 0.018 of optimum).
Percentiles of matched distances:
    0%    50%    95%   100% 
0.0110 0.0577 0.1600 0.1660 
Balance test overall result:
  chisquare df p.value
       2.29  9   0.986
> summary(psfm, psm)
Structure of matched sets:
 1:0  3:1  2:1  1:2 1:5+  0:1 
   3    1    1    1    1   11 
Effective Sample Size:  5.92 
(equivalent number of matched pairs).

sum(matched.distances)=1.02
(within 0.018 of optimum).
Percentiles of matched distances:
    0%    50%    95%   100% 
0.0110 0.0577 0.1600 0.1660 
Balance test overall result:
  chisquare df p.value
       2.29  9   0.986
> psm2 <- glm(pr~ cut(date, c(67, 69.5, 72)) +
+             t1 + t2 + cap + ne + ct + bw + cum.n + pt,
+             family=binomial, data=nuclearplants)
> psd2 <- match_on(psm2, standardization.scale = sd)
> psd2summary <- summary(pairmatch(psd2, data = nuclearplants), propensity.model=psm2)
> 
> # due to slight differences in the match on different platforms, just check that the
> # total.distances are the same and that the chi-squared value is 9.5 +- 0.5
> 
> psd2summary$total.distance
[1] 7.56215
> chisquared.value <- psd2summary$balance$overall$chisquare
> stopifnot(abs(9.5 - chisquared.value) < 0.5)
> 
> proc.time()
   user  system elapsed 
  1.389   0.043   1.415 
