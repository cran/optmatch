
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-apple-darwin12.0.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require('optmatch')
Loading required package: optmatch
You're loading optmatch, by B. Hansen and M. Fredrickson.
 The optmatch package makes essential use of D. P. Bertsekas
 and P. Tseng's RELAX-IV algorithm and code, as well as
 Bertsekas' AUCTION algorithm and code.  Using the software
 to 'satisfy in any part commercial delivery requirements to
 government or industry' requires a special agreement with
 Dr. Bertsekas. For more information, enter
 relaxinfo() at the command line.

> data(nuclear, package="boot")
> match_on(pr ~ cap, data = nuclear)
An object of class "DenseMatrix"
         control
treatment         1          2          4          6           7         8
       3  1.9896052 0.00000000 0.00000000 2.90019165 1.279031888 3.2002115
       5  1.9896052 0.00000000 0.00000000 2.90019165 1.279031888 3.2002115
       9  0.7105733 1.27903189 1.27903189 1.62115976 0.000000000 1.9211796
       18 0.8263704 2.81597556 2.81597556 0.08421609 1.536943668 0.3842359
       20 1.9106526 0.07895259 0.07895259 2.82123906 1.200079303 3.1212589
       22 0.7421543 1.24745085 1.24745085 1.65274079 0.031581034 1.9527606
       24 0.7053098 1.28429539 1.28429539 1.61589625 0.005263506 1.9159161
       30 1.0474376 0.94216752 0.94216752 1.95802413 0.336864366 2.2580440
       31 0.3052833 1.68432183 1.68432183 1.21586982 0.405289940 1.5158896
       32 1.0474376 0.94216752 0.94216752 1.95802413 0.336864366 2.2580440
         control
treatment        10        11        12       13         14        15        16
       3  1.4369371 2.6580704 1.4474641 2.815976 0.07895259 1.1316537 1.5106261
       5  1.4369371 2.6580704 1.4474641 2.815976 0.07895259 1.1316537 1.5106261
       9  0.1579052 1.3790385 0.1684322 1.536944 1.20007930 0.1473782 0.2315943
       18 1.3790385 0.1579052 1.3685115 0.000000 2.73702297 1.6843218 1.3053494
       20 1.3579845 2.5791178 1.3685115 2.737023 0.00000000 1.0527011 1.4316736
       22 0.1894862 1.4106195 0.2000132 1.568525 1.16849827 0.1157971 0.2631753
       24 0.1526417 1.3737750 0.1631687 1.531680 1.20534281 0.1526417 0.2263307
       30 0.4947695 1.7159029 0.5052965 1.873808 0.86321494 0.1894862 0.5684586
       31 0.2473848 0.9737486 0.2368578 1.131654 1.60536924 0.5526681 0.1736957
       32 0.4947695 1.7159029 0.5052965 1.873808 0.86321494 0.1894862 0.5684586
         control
treatment        17        19        21        23         25        26
       3  1.1579713 0.1315876 0.8000529 1.4685181 2.77386751 0.3421279
       5  1.1579713 0.1315876 0.8000529 1.4685181 2.77386751 0.3421279
       9  0.1210606 1.4106195 0.4789790 0.1894862 1.49483562 1.6211598
       18 1.6580043 2.9475632 2.0159227 1.3474575 0.04210805 3.1581034
       20 1.0790187 0.2105402 0.7211003 1.3895655 2.69491493 0.4210805
       22 0.0894796 1.3790385 0.4473980 0.2210672 1.52641666 1.5895787
       24 0.1263241 1.4158830 0.4842425 0.1842227 1.48957212 1.6264233
       30 0.2158037 1.0737552 0.1421147 0.5263506 1.83169999 1.2842954
       31 0.5263506 1.8159095 0.8842690 0.2158037 1.08954568 2.0264497
       32 0.2158037 1.0737552 0.1421147 0.5263506 1.83169999 1.2842954
         control
treatment        27          28        29
       3  1.6843218 1.284295394 0.9421675
       5  1.6843218 1.284295394 0.9421675
       9  0.4052899 0.005263506 0.3368644
       18 1.1316537 1.531680163 1.8738080
       20 1.6053692 1.205342808 0.8632149
       22 0.4368710 0.036844540 0.3052833
       24 0.4000264 0.000000000 0.3421279
       30 0.7421543 0.342127871 0.0000000
       31 0.0000000 0.400026434 0.7421543
       32 0.7421543 0.342127871 0.0000000
Slot "call":
match_on(x = pr ~ cap, data = nuclear)

> match_on(pr ~ date + cum.n, data = nuclear)
An object of class "DenseMatrix"
         control
treatment         1        2         4         6         7         8        10
       3  2.0264790 0.000000 1.7458238 0.5725485 0.8417016 1.2647856 1.0697269
       5  0.5628437 1.745824 0.0000000 1.6253572 1.4200754 2.3493078 2.0950025
       9  1.5802533 1.058958 1.6215632 0.4881978 0.2900884 0.7441765 0.5084328
       18 2.1363891 1.173147 2.1663252 0.6996975 0.7571007 0.1860441 0.1044318
       20 1.3728064 1.570104 1.6014152 1.0139736 0.7322967 1.0973156 0.9363521
       22 2.3010849 3.701536 2.8575497 3.1698848 2.8645233 3.1090382 3.0348915
       24 3.3351751 3.003133 3.6138785 2.5063642 2.4402028 1.7500697 1.9348825
       30 0.7322967 1.616867 0.1824334 1.5480754 1.3728064 2.3079354 2.0507172
       31 1.3186065 1.355429 0.7752465 1.5042351 1.4506769 2.3404791 2.0857717
       32 0.7322967 1.616867 0.1824334 1.5480754 1.3728064 2.3079354 2.0507172
         control
treatment        11        12        13        14        15        16       17
       3  1.2846937 1.3782370 1.1731465 1.5464948 2.3549865 1.1054807 2.642366
       5  2.1194831 1.7517531 2.1663252 1.7589266 0.9068009 1.9839122 1.455807
       9  0.4986660 0.3211243 0.5581324 0.4881978 1.7952047 0.3720883 1.867295
       18 0.1766521 0.6228615 0.0000000 0.7811026 2.3374376 0.1860441 2.350198
       20 0.7864709 0.3112510 0.9340765 0.1860441 1.4883530 0.7811026 1.421575
       22 2.8211376 2.4357153 2.9962065 2.2540008 2.0114025 2.8909537 1.420569
       24 1.7405307 1.9072754 1.8308081 1.8611591 3.3512605 1.9261873 3.026403
       30 2.0959158 1.7589266 2.1282073 1.7848168 1.0839194 1.9496645 1.621471
       31 2.1957157 1.9692765 2.1796608 2.0457185 1.6756128 2.0231720 2.196890
       32 2.0959158 1.7589266 2.1282073 1.7848168 1.0839194 1.9496645 1.621471
         control
treatment        19        21       23        25        26        27        28
       3  2.1350510 2.1892938 2.821138 3.3021117 3.8762323 1.3554289 1.2279106
       5  3.0129348 0.7322967 1.621471 2.3603365 3.0024117 0.7752465 0.9002672
       9  1.4217292 1.6812788 2.026479 2.3540645 2.8831937 1.7278619 1.6834568
       18 0.9846383 2.2317268 2.496038 2.7092928 3.1714510 2.1796608 2.1091655
       20 1.4813561 1.4200754 1.563080 1.8198094 2.3418635 1.9377908 1.9348825
       22 2.9576393 2.1533889 1.284694 0.5028506 0.1766521 3.5628564 3.6391689
       24 0.9069699 3.3382462 3.077327 2.7800504 2.8809589 3.8727532 3.8354687
       30 3.0084703 0.9068009 1.790398 2.5183980 3.1606146 0.5937666 0.7178890
       31 3.1370275 1.4966358 2.370201 3.0763294 3.7166966 0.0000000 0.1558592
       32 3.0084703 0.9068009 1.790398 2.5183980 3.1606146 0.5937666 0.7178890
         control
treatment        29
       3  1.6168667
       5  0.1824334
       9  1.5977225
       18 2.1282073
       20 1.6386768
       22 3.0126808
       24 3.6458703
       30 0.0000000
       31 0.5937666
       32 0.0000000
Slot "call":
match_on(x = pr ~ date + cum.n, data = nuclear)

> match_on(pr ~ date + cum.n, data = nuclear, within = exactMatch(pr ~ pt, data = nuclear))
$`0`
       control
treated         1        2        4         6         7         8        10
     3  2.0264790 0.000000 1.745824 0.5725485 0.8417016 1.2647856 1.0697269
     5  0.5628437 1.745824 0.000000 1.6253572 1.4200754 2.3493078 2.0950025
     9  1.5802533 1.058958 1.621563 0.4881978 0.2900884 0.7441765 0.5084328
     18 2.1363891 1.173147 2.166325 0.6996975 0.7571007 0.1860441 0.1044318
     20 1.3728064 1.570104 1.601415 1.0139736 0.7322967 1.0973156 0.9363521
     22 2.3010849 3.701536 2.857550 3.1698848 2.8645233 3.1090382 3.0348915
     24 3.3351751 3.003133 3.613879 2.5063642 2.4402028 1.7500697 1.9348825
       control
treated        11        12        13        14        15        16       17
     3  1.2846937 1.3782370 1.1731465 1.5464948 2.3549865 1.1054807 2.642366
     5  2.1194831 1.7517531 2.1663252 1.7589266 0.9068009 1.9839122 1.455807
     9  0.4986660 0.3211243 0.5581324 0.4881978 1.7952047 0.3720883 1.867295
     18 0.1766521 0.6228615 0.0000000 0.7811026 2.3374376 0.1860441 2.350198
     20 0.7864709 0.3112510 0.9340765 0.1860441 1.4883530 0.7811026 1.421575
     22 2.8211376 2.4357153 2.9962065 2.2540008 2.0114025 2.8909537 1.420569
     24 1.7405307 1.9072754 1.8308081 1.8611591 3.3512605 1.9261873 3.026403
       control
treated        19        21       23        25        26
     3  2.1350510 2.1892938 2.821138 3.3021117 3.8762323
     5  3.0129348 0.7322967 1.621471 2.3603365 3.0024117
     9  1.4217292 1.6812788 2.026479 2.3540645 2.8831937
     18 0.9846383 2.2317268 2.496038 2.7092928 3.1714510
     20 1.4813561 1.4200754 1.563080 1.8198094 2.3418635
     22 2.9576393 2.1533889 1.284694 0.5028506 0.1766521
     24 0.9069699 3.3382462 3.077327 2.7800504 2.8809589

$`1`
       control
treated        27        28        29
     30 0.5937666 0.7178890 0.0000000
     31 0.0000000 0.1558592 0.5937666
     32 0.5937666 0.7178890 0.0000000

> 
> if ( (require(splines)) )
+   match_on(pr ~ ns(date,df=3) + cum.n, data = nuclear)
Loading required package: splines
An object of class "DenseMatrix"
         control
treatment        1        2         4        6         7         8        10
       3  3.531733 0.000000 3.2945626 2.428248 2.7652981 2.6212406 2.6507696
       5  1.601552 3.294563 0.0000000 1.764622 1.4311078 2.4381116 2.1353554
       9  1.818030 2.701239 1.7603452 1.171698 0.7411901 0.7839539 0.6463218
       18 2.383752 2.619564 2.2622468 1.151947 0.9670454 0.1959885 0.2987629
       20 1.669752 2.978278 2.7453838 2.689233 2.3364108 1.9840641 2.1210975
       22 3.919774 4.041384 3.6401714 3.542628 3.5406297 3.7718095 3.6803385
       24 4.004676 3.102909 4.3661248 3.331502 3.3653509 2.5482711 2.8143287
       30 1.745233 2.896449 0.4481463 1.595212 1.3928880 2.3639400 2.0707340
       31 3.090367 1.447344 3.0614670 3.025276 3.1687082 3.3476139 3.3064017
       32 1.745233 2.896449 0.4481463 1.595212 1.3928880 2.3639400 2.0707340
         control
treatment        11        12        13        14       15        16       17
       3  2.6099180 2.7708198 2.6195639 2.9135206 3.832500 2.6325178 3.813869
       5  2.4289381 2.4967023 2.2622468 2.8237274 2.610043 2.0899655 3.190257
       9  0.7104830 1.1405973 0.5879654 1.6003326 2.533709 0.3919769 2.850735
       18 0.5887859 1.3285500 0.0000000 1.7764749 3.014747 0.1959885 3.236486
       20 1.3213729 0.5484963 1.8729056 0.1959885 1.567908 1.7764749 1.546838
       22 3.7744954 3.8395240 3.7154676 3.9504834 4.253027 3.6687431 4.005017
       24 2.4067651 2.5381023 2.6270849 2.5192106 4.036826 2.7177726 3.613326
       30 2.3683770 2.4571076 2.1981156 2.7796666 2.682645 2.0376542 3.198777
       31 3.1370472 2.9823976 3.2644488 3.0186688 3.231387 3.1911684 3.255915
       32 2.3683770 2.4571076 2.1981156 2.7796666 2.682645 2.0376542 3.198777
         control
treatment       19       21       23       25        26       27        28
       3  2.965441 3.672158 3.806933 3.463440 4.4115901 1.447344 1.4802638
       5  3.916449 2.163392 3.188850 3.016206 3.9637873 3.061467 3.5306499
       9  2.321808 2.183445 2.890517 2.773226 4.0315562 3.076993 3.4267353
       18 2.098185 2.702912 3.274085 3.023259 4.1232925 3.264449 3.5652260
       20 1.611236 1.525983 1.656387 2.461980 4.4904726 2.992122 3.2245528
       22 4.276785 4.102647 3.790777 1.790471 0.5775223 4.136730 4.3840725
       24 1.568505 3.999920 3.555121 2.840273 3.8607431 3.916021 3.9635275
       30 3.807404 2.261696 3.190484 2.947265 3.8751944 2.665397 3.1351959
       31 3.584291 3.135610 3.241606 3.264062 4.5371969 0.000000 0.4795414
       32 3.807404 2.261696 3.190484 2.947265 3.8751944 2.665397 3.1351959
         control
treatment        29
       3  2.8964489
       5  0.4481463
       9  1.7387205
       18 2.1981156
       20 2.7130001
       22 3.5480453
       24 4.2131649
       30 0.0000000
       31 2.6653970
       32 0.0000000
Slot "call":
match_on(x = pr ~ ns(date, df = 3) + cum.n, data = nuclear)

> 
> if (require(splines))
+   match_on(pr ~ ns(date,df=3) + cum.n, data = nuclear, exactMatch(pr ~ pt, data = nuclear)
+ )
$`0`
       control
treated        1        2        4        6         7         8        10
     3  3.531733 0.000000 3.294563 2.428248 2.7652981 2.6212406 2.6507696
     5  1.601552 3.294563 0.000000 1.764622 1.4311078 2.4381116 2.1353554
     9  1.818030 2.701239 1.760345 1.171698 0.7411901 0.7839539 0.6463218
     18 2.383752 2.619564 2.262247 1.151947 0.9670454 0.1959885 0.2987629
     20 1.669752 2.978278 2.745384 2.689233 2.3364108 1.9840641 2.1210975
     22 3.919774 4.041384 3.640171 3.542628 3.5406297 3.7718095 3.6803385
     24 4.004676 3.102909 4.366125 3.331502 3.3653509 2.5482711 2.8143287
       control
treated        11        12        13        14       15        16       17
     3  2.6099180 2.7708198 2.6195639 2.9135206 3.832500 2.6325178 3.813869
     5  2.4289381 2.4967023 2.2622468 2.8237274 2.610043 2.0899655 3.190257
     9  0.7104830 1.1405973 0.5879654 1.6003326 2.533709 0.3919769 2.850735
     18 0.5887859 1.3285500 0.0000000 1.7764749 3.014747 0.1959885 3.236486
     20 1.3213729 0.5484963 1.8729056 0.1959885 1.567908 1.7764749 1.546838
     22 3.7744954 3.8395240 3.7154676 3.9504834 4.253027 3.6687431 4.005017
     24 2.4067651 2.5381023 2.6270849 2.5192106 4.036826 2.7177726 3.613326
       control
treated       19       21       23       25        26
     3  2.965441 3.672158 3.806933 3.463440 4.4115901
     5  3.916449 2.163392 3.188850 3.016206 3.9637873
     9  2.321808 2.183445 2.890517 2.773226 4.0315562
     18 2.098185 2.702912 3.274085 3.023259 4.1232925
     20 1.611236 1.525983 1.656387 2.461980 4.4904726
     22 4.276785 4.102647 3.790777 1.790471 0.5775223
     24 1.568505 3.999920 3.555121 2.840273 3.8607431

$`1`
       control
treated       27        28       29
     30 2.665397 3.1351959 0.000000
     31 0.000000 0.4795414 2.665397
     32 2.665397 3.1351959 0.000000

> cum.n.q <- cut(nuclear$cum.n, quantile(nuclear$cum.n), include.lowest=TRUE)
> match_on(pr ~ date + cum.n.q, data = nuclear)
An object of class "DenseMatrix"
         control
treatment        1        2         4         6         7        8        10
       3  2.574968 0.000000 3.2738795 0.8226068 3.2275099 1.519731 1.3942488
       5  3.631409 3.273879 0.0000000 2.8769918 3.3260500 2.695868 2.7161852
       9  3.625879 3.381864 3.2804956 3.0690919 0.3485622 2.961228 2.9688756
       18 3.088692 1.519731 2.6958682 0.6971244 2.9678497 0.000000 0.1254824
       20 4.494515 4.150352 1.2827089 3.5600398 3.7765826 3.142625 3.2106017
       22 3.262542 3.998327 3.1902090 3.4088824 3.5963405 2.996632 3.0632326
       24 4.779658 3.834184 3.2995047 3.0115775 3.9028506 2.314453 2.4399355
       30 3.500195 3.142625 0.2370223 2.7972914 3.2911275 2.673187 2.6826114
       31 3.147118 2.801487 1.0456866 2.6697386 3.2998047 2.752467 2.7246287
       32 3.500195 3.142625 0.2370223 2.7972914 3.2911275 2.673187 2.6826114
         control
treatment        11        12       13        14       15       16       17
       3  1.7428110 3.6270800 1.519731 3.7691297 2.582253 1.519731 2.787364
       5  2.6739454 3.2766532 2.695868 3.2998047 3.380526 2.695868 3.076407
       9  2.9607441 0.4601021 2.961228 0.6971244 3.410555 2.961228 3.175621
       18 0.2230798 3.0148162 0.000000 3.0690919 2.852499 0.000000 2.603884
       20 3.0308543 3.4441054 3.142625 3.3772852 4.150345 3.142625 3.631409
       22 2.8879172 3.2734089 2.996632 3.2113577 2.788498 2.996632 1.979833
       24 2.0913732 3.4307429 2.314453 3.3170847 4.387203 2.314453 3.761354
       30 2.6709473 3.2998047 2.673187 3.3396594 3.273668 2.673187 3.022677
       31 2.8151194 3.5005397 2.752467 3.5918985 3.022677 2.752467 2.977268
       32 2.6709473 3.2998047 2.673187 3.3396594 3.273668 2.673187 3.022677
         control
treatment       19       21       23        25        26        27       28
       3  2.565418 2.567696 2.887917 3.4927100 4.1718014 2.8014874 2.960744
       5  2.752467 3.500195 3.022677 3.0053479 3.2785994 1.0456866 3.833582
       9  3.100907 3.511875 3.143071 3.2113577 3.5360563 3.3640344 1.742811
       18 1.045687 2.963479 2.574968 2.7039031 3.1175422 2.7524672 3.375661
       20 2.738949 4.319356 3.500195 3.0764073 2.9699615 2.3283955 4.633913
       22 2.615573 3.025520 1.742811 0.6971244 0.2230798 3.7037607 4.453089
       24 1.268766 4.581502 3.591779 2.9565396 2.6247981 4.0044334 4.926768
       30 2.819575 3.380526 2.986842 3.0516339 3.3861165 0.8086643 3.715417
       31 3.173542 3.076407 3.005348 3.3338534 3.8413757 0.0000000 3.406840
       32 2.819575 3.380526 2.986842 3.0516339 3.3861165 0.8086643 3.715417
         control
treatment        29
       3  3.1426250
       5  0.2370223
       9  3.2704430
       18 2.6731875
       20 1.5197312
       22 3.2845479
       24 3.4441416
       30 0.0000000
       31 0.8086643
       32 0.0000000
Slot "call":
match_on(x = pr ~ date + cum.n.q, data = nuclear)

> match_on(pr ~ date + cum.n.q, data = nuclear, within = exactMatch(pr~pt, data = nuclear))
$`0`
       control
treated        1        2        4         6         7        8        10
     3  2.574968 0.000000 3.273879 0.8226068 3.2275099 1.519731 1.3942488
     5  3.631409 3.273879 0.000000 2.8769918 3.3260500 2.695868 2.7161852
     9  3.625879 3.381864 3.280496 3.0690919 0.3485622 2.961228 2.9688756
     18 3.088692 1.519731 2.695868 0.6971244 2.9678497 0.000000 0.1254824
     20 4.494515 4.150352 1.282709 3.5600398 3.7765826 3.142625 3.2106017
     22 3.262542 3.998327 3.190209 3.4088824 3.5963405 2.996632 3.0632326
     24 4.779658 3.834184 3.299505 3.0115775 3.9028506 2.314453 2.4399355
       control
treated        11        12       13        14       15       16       17
     3  1.7428110 3.6270800 1.519731 3.7691297 2.582253 1.519731 2.787364
     5  2.6739454 3.2766532 2.695868 3.2998047 3.380526 2.695868 3.076407
     9  2.9607441 0.4601021 2.961228 0.6971244 3.410555 2.961228 3.175621
     18 0.2230798 3.0148162 0.000000 3.0690919 2.852499 0.000000 2.603884
     20 3.0308543 3.4441054 3.142625 3.3772852 4.150345 3.142625 3.631409
     22 2.8879172 3.2734089 2.996632 3.2113577 2.788498 2.996632 1.979833
     24 2.0913732 3.4307429 2.314453 3.3170847 4.387203 2.314453 3.761354
       control
treated       19       21       23        25        26
     3  2.565418 2.567696 2.887917 3.4927100 4.1718014
     5  2.752467 3.500195 3.022677 3.0053479 3.2785994
     9  3.100907 3.511875 3.143071 3.2113577 3.5360563
     18 1.045687 2.963479 2.574968 2.7039031 3.1175422
     20 2.738949 4.319356 3.500195 3.0764073 2.9699615
     22 2.615573 3.025520 1.742811 0.6971244 0.2230798
     24 1.268766 4.581502 3.591779 2.9565396 2.6247981

$`1`
       control
treated        27       28        29
     30 0.8086643 3.715417 0.0000000
     31 0.0000000 3.406840 0.8086643
     32 0.8086643 3.715417 0.0000000

> 
> ### should give error, incorrect mode
> try(match_on(as.factor(pr) ~ cap, data = nuclear))
An object of class "DenseMatrix"
         control
treatment         1          2          4          6           7         8
       3  1.9896052 0.00000000 0.00000000 2.90019165 1.279031888 3.2002115
       5  1.9896052 0.00000000 0.00000000 2.90019165 1.279031888 3.2002115
       9  0.7105733 1.27903189 1.27903189 1.62115976 0.000000000 1.9211796
       18 0.8263704 2.81597556 2.81597556 0.08421609 1.536943668 0.3842359
       20 1.9106526 0.07895259 0.07895259 2.82123906 1.200079303 3.1212589
       22 0.7421543 1.24745085 1.24745085 1.65274079 0.031581034 1.9527606
       24 0.7053098 1.28429539 1.28429539 1.61589625 0.005263506 1.9159161
       30 1.0474376 0.94216752 0.94216752 1.95802413 0.336864366 2.2580440
       31 0.3052833 1.68432183 1.68432183 1.21586982 0.405289940 1.5158896
       32 1.0474376 0.94216752 0.94216752 1.95802413 0.336864366 2.2580440
         control
treatment        10        11        12       13         14        15        16
       3  1.4369371 2.6580704 1.4474641 2.815976 0.07895259 1.1316537 1.5106261
       5  1.4369371 2.6580704 1.4474641 2.815976 0.07895259 1.1316537 1.5106261
       9  0.1579052 1.3790385 0.1684322 1.536944 1.20007930 0.1473782 0.2315943
       18 1.3790385 0.1579052 1.3685115 0.000000 2.73702297 1.6843218 1.3053494
       20 1.3579845 2.5791178 1.3685115 2.737023 0.00000000 1.0527011 1.4316736
       22 0.1894862 1.4106195 0.2000132 1.568525 1.16849827 0.1157971 0.2631753
       24 0.1526417 1.3737750 0.1631687 1.531680 1.20534281 0.1526417 0.2263307
       30 0.4947695 1.7159029 0.5052965 1.873808 0.86321494 0.1894862 0.5684586
       31 0.2473848 0.9737486 0.2368578 1.131654 1.60536924 0.5526681 0.1736957
       32 0.4947695 1.7159029 0.5052965 1.873808 0.86321494 0.1894862 0.5684586
         control
treatment        17        19        21        23         25        26
       3  1.1579713 0.1315876 0.8000529 1.4685181 2.77386751 0.3421279
       5  1.1579713 0.1315876 0.8000529 1.4685181 2.77386751 0.3421279
       9  0.1210606 1.4106195 0.4789790 0.1894862 1.49483562 1.6211598
       18 1.6580043 2.9475632 2.0159227 1.3474575 0.04210805 3.1581034
       20 1.0790187 0.2105402 0.7211003 1.3895655 2.69491493 0.4210805
       22 0.0894796 1.3790385 0.4473980 0.2210672 1.52641666 1.5895787
       24 0.1263241 1.4158830 0.4842425 0.1842227 1.48957212 1.6264233
       30 0.2158037 1.0737552 0.1421147 0.5263506 1.83169999 1.2842954
       31 0.5263506 1.8159095 0.8842690 0.2158037 1.08954568 2.0264497
       32 0.2158037 1.0737552 0.1421147 0.5263506 1.83169999 1.2842954
         control
treatment        27          28        29
       3  1.6843218 1.284295394 0.9421675
       5  1.6843218 1.284295394 0.9421675
       9  0.4052899 0.005263506 0.3368644
       18 1.1316537 1.531680163 1.8738080
       20 1.6053692 1.205342808 0.8632149
       22 0.4368710 0.036844540 0.3052833
       24 0.4000264 0.000000000 0.3421279
       30 0.7421543 0.342127871 0.0000000
       31 0.0000000 0.400026434 0.7421543
       32 0.7421543 0.342127871 0.0000000
Slot "call":
match_on(x = as.factor(pr) ~ cap, data = nuclear)

> 
> proc.time()
   user  system elapsed 
  0.890   0.034   0.909 
